# Generated by Django 5.0.1 on 2025-07-03 17:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField()),
                ('content', models.TextField(help_text='Markdown content for the lesson')),
                ('order', models.IntegerField(default=0)),
                ('django_code', models.TextField(blank=True, help_text='Django/Python code example')),
                ('dotnet_code', models.TextField(blank=True, help_text='Equivalent .NET/C# code for comparison')),
                ('has_exercise', models.BooleanField(default=False)),
                ('exercise_starter_code', models.TextField(blank=True)),
                ('exercise_solution', models.TextField(blank=True)),
                ('exercise_tests', models.TextField(blank=True, help_text='JSON array of test cases')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['module', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('order', models.IntegerField(default=0)),
                ('estimated_minutes', models.IntegerField(default=30)),
                ('dotnet_comparison', models.TextField(help_text='Key comparisons with .NET concepts')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='CodeSnippet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('language', models.CharField(choices=[('python', 'Python'), ('csharp', 'C#'), ('javascript', 'JavaScript'), ('yaml', 'YAML'), ('dockerfile', 'Dockerfile'), ('bash', 'Bash')], max_length=20)),
                ('code', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='snippets', to='lessons.lesson')),
            ],
        ),
        migrations.AddField(
            model_name='lesson',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='lessons.module'),
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('options', models.JSONField(help_text='List of answer options')),
                ('correct_answer', models.IntegerField(help_text='Index of correct answer in options')),
                ('explanation', models.TextField(help_text='Explanation of the correct answer')),
                ('order', models.IntegerField(default=0)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to='lessons.lesson')),
            ],
            options={
                'verbose_name_plural': 'Quizzes',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='UserQuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_answer', models.IntegerField()),
                ('is_correct', models.BooleanField()),
                ('attempted_at', models.DateTimeField(auto_now_add=True)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-attempted_at'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='lesson',
            unique_together={('module', 'slug')},
        ),
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('exercise_completed', models.BooleanField(default=False)),
                ('exercise_attempts', models.IntegerField(default=0)),
                ('exercise_code', models.TextField(blank=True, help_text="User's submitted code")),
                ('time_spent_seconds', models.IntegerField(default=0)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.lesson')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'lesson')},
            },
        ),
    ]
